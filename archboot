#!/bin/bash
__appname__="archboot"
__version__="v2.6"
__branch__="dev"
__author__="@grm34"
__license__="Apache v2.0 License"

# Some colors
red="\e[1;31m"; green="\e[1;32m"; yellow="\e[1;33m"
blue="\e[1;34m"; cyan="\e[1;36m"; nc="\e[0m"

# Archboot banner
_banner() {
    echo -e "$red" >&2
    echo -e "     _             _     _                 _   " >&2
    echo -e "    / \   _ __ ___| |__ | |__   ___   ___ | |_ " >&2
    echo -e "   / _ \ | '__/ __| '_ \| '_ \ / _ \ / _ \| __|" >&2
    echo -e "  / ___ \| | | (__| | | | |_) | (_) | (_) | |_ " >&2
    echo -e " /_/   \_\_|  \___|_| |_|_.__/ \___/ \___/ \__|$green$__version__" >&2
    echo -e "$nc" >&2
    echo -e "Welcome in archboot, a script made with love by grm34!" >&2
    echo -e "This script perform an automatic install of Archlinux." >&2
    echo -e "Pretty simple, it only ask you for hostname, username," >&2
    echo -e "password, which disk to use, required partitions sizes" >&2
    echo -e "and if you wish or not to install desktop environment." >&2
    echo -e "Supported desktop in $__version__: KDE | Gnome | Xfce4 | Lxde." >&2
}

# General functions
_prompt() {
   echo -e "$yellow\n==> $green$1 $red$2$nc" >&2
   echo -e "$yellow==> ---------------------------------------------------$nc" >&2
   echo -ne "$yellow==> $nc" >&2
}

_confirm() {
    until [[ ${confirm} == "y" || ${confirm} == "n" ]]; do
    echo -e "$yellow\n==> $green$1 $red[y/n]$nc" >&2
    echo -e "$yellow==> --------------------------------------------------$nc" >&2
    echo -ne "$yellow==> $nc" >&2
    read -r confirm
    done
}

_info() {
    echo -e "$yellow\n==> $cyan$1...$nc" && sleep 2s
}

_note() {
    echo -e "$red\nNote: $blue$1$nc" >&2
}

_error() {
    echo -e "$red\nError: $yellow$1$nc" >&2
    exit
}

_chroot() {
    arch-chroot /mnt /bin/bash <<EOF
    $1
EOF
}

# Define logs
_logs() {
    _info "Setting archboot log"
    datetime=$(date '+%d-%m-%Y')
    logfile="archboot_$datetime.log"
}

# Start Archboot
_banner

# Download base sources
_confirm "Start downloading sources from github?"
if [[ ${confirm} == "y" ]]; then
    _info "Downloading sources"
    wget https://raw.githubusercontent.com/grm34/archboot/$__branch__/src/arch/base
    wget https://raw.githubusercontent.com/grm34/archboot/$__branch__/src/arch/bootloader
    wget https://raw.githubusercontent.com/grm34/archboot/$__branch__/src/arch/firmware
    wget https://raw.githubusercontent.com/grm34/archboot/$__branch__/src/arch/mounting
    wget https://raw.githubusercontent.com/grm34/archboot/$__branch__/src/arch/partition
    wget https://raw.githubusercontent.com/grm34/archboot/$__branch__/src/arch/user
    wget https://raw.githubusercontent.com/grm34/archboot/$__branch__/src/arch/yaourt
else
    exit
fi; unset confirm

# Import base sources
_info "Importing sources"
source ./base; source ./bootloader; source ./firmware; source ./mounting
source ./partition; source ./user; source ./yaourt

# Prepare the system
_user_infos; _logs; _firmware; _partition; _mounting

# Install Archboot
if [ $? -eq 0 ]; then
    _confirm "Do you wish to install ArchLinux now?"
    if [[ ${confirm} == "y" ]]; then
        (_base; _bootloader; _user_settings; _yaourt) 2>&1 | tee -a "$logfile"
    else
        exit
    fi; unset confirm
else
    _error "partitionning error, please try again."
fi

# Desktop Environment
if [[ ! -z ${desktop+x} ]]; then

    # Download desktop sources
    _info "Downloading desktop sources"
    wget https://raw.githubusercontent.com/grm34/archboot/$__branch__/src/desktop/gpu
    wget https://raw.githubusercontent.com/grm34/archboot/$__branch__/src/desktop/apps
    wget https://raw.githubusercontent.com/grm34/archboot/$__branch__/src/desktop/desktop

    # Import desktop sources
    _info "Importing sources"
    source ./gpu; source ./apps; source ./desktop

    # Install desktop environment
    (_gpu; _install_desktop; _desktop_settings) 2>&1 | tee -a "$logfile"
fi

# Logfile path
_info "Setting logfile path"
mkdir /mnt/var/log/archboot; cp "$logfile" /mnt/var/log/archboot/

# Install notes
_info "Installation finished! Logfile: /var/log/archboot/"
_note "$__appname__ $__version__ by $__author__ - $__license__"

# Reboot
_confirm "Do you want to reboot your computer now?"
if [[ ${confirm} == "y" ]]; then
    umount -R /mnt; reboot
else
    exit
fi; unset confirm
