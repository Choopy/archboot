#!/bin/bash
__appname__="archboot"
__version__="v2.6.3"
__branch__="master"
__author__="@grm34"
__license__="Apache v2.0 License"

_banner() {
    echo -e "$red" >&2
    echo -e "    _             _     _                 _   " >&2
    echo -e "   / \   _ __  __| |__ | |__   ___   ___ | |_ " >&2
    echo -e "  / _ \ | '__/ __| '_ \| '_ \ / _ \ / _ \| __|" >&2
    echo -e " / ___ \| | | (__| | | | |_) | (_) | (_) | |_ " >&2
    echo -e "/_/   \_\_|  \___|_| |_|_.__/ \___/ \___/ \__|_$green$__version__$nc\n" >&2
    echo -e "Welcome in archboot, a script made with love by grm34!" >&2
    echo -e "This script perform an automatic install of Archlinux." >&2
    echo -e "Pretty simple, it only ask you for hostname, username," >&2
    echo -e "password, which disk to use, required partitions sizes" >&2
    echo -e "and if you wish or not to install desktop environment." >&2
    echo -e "Supported ones in $__version__ > Kde | Gnome | Xfce | Lxde." >&2
}

#
# Global functions
#

# Function to ask some infos
_prompt() {
    echo -e "$yellow" >&2
    echo -e "==> $green$1 $red$2 $green$3 $red$4 $green$5 $red$6 $green$7 $red$8$nc" >&2
    echo -e "$yellow==> ---------------------------------------------------$nc" >&2
    echo -ne "$yellow==> $nc" >&2
}

# Function to ask confirmation (Yes/No)
_confirm() {
    until [[ ${confirm} == "y" || ${confirm} == "n" ]]
    do
        echo -e "$yellow\n==> $green$1 $red[y/n]$nc" >&2
        echo -e "$yellow==> --------------------------------------------------$nc" >&2
        echo -ne "$yellow==> $nc" >&2
        read -r confirm
    done
}

# Function to display install steps
_info() {
    echo -e "$yellow\n==> $cyan$1...$nc"
    sleep 2s
}

# Function to display some notes
_note() {
    echo -e "$red\nNote: $blue$1$nc" >&2
}

# Function to display errors
_error() {
    echo -e "$red\nError: $yellow$1$nc" >&2
    sleep 5s
    reboot
}

# Function to execute actions in chrooted env
_chroot() {
    arch-chroot /mnt /bin/bash <<EOF
    $1
EOF
}

# Function to set install logfile
_logs() {
    _info "Setting archboot log"
    datetime=$(date '+%d-%m-%Y')
    logfile="archboot_$datetime.log"
}

# Function to set system clock
_clock() {
    _info "Setting system clock"
    timedatectl set-ntp true
    timedatectl set-timezone Europe/Paris
}

#
# Global variables
#

# Github url
_url="https://raw.githubusercontent.com/grm34/archboot/$__branch__"

# Bash Colors
red="\e[1;31m"; green="\e[1;32m"; yellow="\e[1;33m"
blue="\e[1;34m"; cyan="\e[1;36m"; nc="\e[0m"

#
# Start Archboot
#

# Display banner
_banner

# Download base sources
_confirm "Start downloading sources from github?"
if [[ ${confirm} == "y" ]]
then
    _info "Downloading sources"
    wget $_url/src/arch/base            # to install ArchLinux Base system
    wget $_url/src/arch/bootloader      # to install Grub2 bootloader
    wget $_url/src/arch/firmware        # to define partitions options
    wget $_url/src/arch/mounting        # to mount partitions & swap
    wget $_url/src/arch/partition       # to create table & partitions
    wget $_url/src/arch/user            # to ask user infos & create user
    wget $_url/src/arch/yaourt          # to set pacman.conf & install yaourt
    wget $_url/src/apps/system_apps     # to load system required apps
else
    exit
fi
unset confirm

# Import base sources
_info "Importing sources"
source ./base; source ./bootloader; source ./firmware; source ./mounting
source ./partition; source ./user; source ./yaourt; source ./system_apps

# Prepare the system
_user_infos; _clock; _logs; _firmware; _partition; _mounting

# Install ArchLinux
if [ $? -eq 0 ]
then
    _confirm "Do you wish to install ArchLinux now?"
    if [[ ${confirm} == "y" ]]
    then
        (_base; _bootloader; _user_settings; _yaourt) 2>&1 | tee -a "$logfile"
    else
        exit
    fi
    unset confirm
else
    _error "partitionning error, system will reboot... Please try again."
fi

# Desktop Environment
if [[ ! -z ${desktop+x} ]]
then

    # Download desktop sources
    _info "Downloading desktop sources"
    wget $_url/src/desktop/gpu          # to check GPU & define drivers
    wget $_url/src/desktop/desktop      # to install Desktop Environment
    wget $_url/src/apps/desktop_apps    # to load desktop required apps

    # Import desktop sources
    _info "Importing sources"
    source ./gpu; source ./desktop; source ./desktop_apps

    # Install desktop environment
    (_gpu; _install_desktop; _desktop_settings) 2>&1 | tee -a "$logfile"
fi

# Logfile path
_info "Setting logfile path"
mkdir /mnt/var/log/archboot
cp "$logfile" /mnt/var/log/archboot/

# Install notes
_note "Installation successful!"
_note "$__appname__ $__version__ by $__author__ - $__license__"

# Reboot
_confirm "Do you want to reboot your computer now?"
if [[ ${confirm} == "y" ]]
then
    umount -R /mnt
    reboot
else
    exit
fi
unset confirm
