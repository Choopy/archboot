#!/bin/bash
__appname__="archboot"
__version__="v1.5"
__author__="@grm34"
__date__="December 2016"
__license__="Apache v2.0 License"

##################
## GLOBAL STYLE ##
##################
red="\e[1;31m"
green="\e[1;32m"
yellow="\e[1;33m"
blue="\e[1;34m"
pink="\e[1;35m"
cyan="\e[1;36m"
nc="\e[0m"

_banner() {
    echo -e "\n" >&2
    echo -e "$red        ...ArchLinux XFCE...   $nc" >&2
    echo -e "$red      _________________________ $nc" >&2
}

_prompt() {
   echo -e "\n$yellow==> $green$1 $nc" >&2
   echo -e "$yellow==> ------------------------------------ $nc" >&2
   echo -ne "$yellow==> $nc" >&2
}

_warning() {
    echo -e "\n$green==> $red$1 $cyan[ENTER]$nc" >&2
    echo -ne "$green==> $nc" >&2
    read -s warning
}

##############
## SETTiNGS ##
##############
_settings() {

    # Username
    until [[ ${#USER_name} -ge 3 \
    && ${USER_name} =~ ^[a-zA-Z0-9][-a-zA-Z0-9_]+$ ]]; do
    _prompt "Enter Username (ex: johnny):"
    read USER_name
    done

    # Password
    until [[ ${#i} -ge 8 && "$i" == *[a-z]* && "$i" == *[0-9]* ]]; do
    echo -e "$cyan\n NOTE: password should be at least 8 chars $nc"
    echo -e "$cyan NOTE: long with one letter and one digit! $nc"
    _prompt "User password (must be secure):"
    read -s i
    done
    until [[ ${USER_passwd} != ${i} ]]; do
    _prompt "Confirm user password:"
    read -s USER_passwd
    done

    # Settings
    echo -e "\n$cyan==> Setting user... $nc" && sleep 2s
    useradd -g users -m -s /bin/bash $USER_name
    echo "${USER_name}:${USER_passwd}" | chpasswd
    echo "${USER_name} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

    # Aliases
    echo -e "$cyan==> Setting aliases... $nc" && sleep 2s
    echo 'export VISUAL="nano"' >> /home/$USER_name/.bashrc
    echo "alias _system='inxi -F -M'" >> /home/$USER_name/.bashrc
    echo "alias _install='yaourt -S'" >> /home/$USER_name/.bashrc
    echo "alias _delete='yaourt -Rcsn'" >> /home/$USER_name/.bashrc
    echo "alias _update='yaourt -Syyua'" >> /home/$USER_name/.bashrc
    echo "alias _clean='yaourt -Scc'" >> /home/$USER_name/.bashrc
    echo "alias _purge='yaourt -Qdt'" >> /home/$USER_name/.bashrc
    echo "alias _verif='yaourt -Qqk'" >> /home/$USER_name/.bashrc
    echo "alias _pacnew='yaourt -C'" >> /home/$USER_name/.bashrc
    echo "alias _search='yaourt -s'" >> /home/$USER_name/.bashrc
    echo "alias _mirrorlist='sudo reflector -c FR --sort rate --save " \
    "/etc/pacman.d/mirrorlist'" >> /home/$USER_name/.bashrc
}

##################
## ARCHBOOT LOG ##
##################
_logs() {
    echo -e "$cyan==> Setting archboot log... $nc" && sleep 2s
    datetime=`date '+%d-%m-%Y_%Hh%Mm%Ss'`
    logfile="/var/log/archboot/install_xfce_$datetime.log"
    if [ ! -d "/var/log/archboot" ]; then
        mkdir /var/log/archboot
    fi
}

######################
## REQUIRED CONTENT ##
######################
_get_required_content() {
    echo -e "$cyan==> Downloading required content... $nc" && sleep 2s
    wget https://raw.githubusercontent.com/grm34/archboot/master/archboot/img/login.png
    wget https://raw.githubusercontent.com/grm34/archboot/master/archboot/img/background.png
    wget https://raw.githubusercontent.com/grm34/archboot/master/archboot/img/x.png
}

###################
## CPU DETECTiON ##
###################
_cpu_detect() {
    echo -e "$cyan==> CPU detection... $nc" && sleep 2s
    uname -m | grep "x86_64" >/dev/null 2>&1
    if [[ $? -eq 0 ]]; then
        cpu="multicore"
        sys_name="Arch Linux x86_64"
        echo "NOTE: found 64bits CPU."
    else
        cpu="singlecore"
        sys_name="Arch Linux i686"
        echo "NOTE: found 32bits CPU."
    fi
}

################
## GPU DRIVER ##
################
_gpu_driver() {
    echo -e "$cyan==> GPU detection... $nc" && sleep 2s
    GPU_driver="xf86-video-vesa"

    # Intel GPU
    lspci | grep "VGA" | grep "Intel" >/dev/null 2>&1
    if [[ $? -eq 0 ]]; then
        echo "NOTE: found INTEL GPU."
        if [[ $cpu == "singlecore" ]]; then
            GPU_driver=" xf86-video-intel vulkan-intel mesa-libgl"
        else
            GPU_driver=\
            " xf86-video-intel vulkan-intel mesa-libgl lib32-mesa-libgl"
        fi
    fi

    # ATI GPU
    lspci | grep "VGA" | grep "ATI" >/dev/null 2>&1
    if [[ $? -eq 0 ]]; then
        echo "NOTE: found ATI GPU."
        if [[ $cpu == "singlecore" ]]; then
            GPU_driver=" xf86-video-ati mesa-libgl mesa-vdpau"
        else
            GPU_driver=\
            " xf86-video-ati mesa-libgl lib32-mesa-libgl \
            mesa-vdpau lib32-mesa-vdpau"
        fi
    fi

    # nVidia GPU
    lspci | grep "VGA" | grep "nVidia" >/dev/null 2>&1
    if [[ $? -eq 0 ]]; then
        echo "NOTE: found nVidia GPU."
        GPU_driver=" xf86-video-nouveau nouveau-dri libva-vdpau-driver"
    fi
}

######################
## XFCE ENViRONMENT ##
######################
_install_yaourt() {
    echo -e "\n$cyan==> Setting timezone... $nc" && sleep 2s
    timedatectl set-local-rtc 1
    echo -e "$cyan==> Setting pacman... $nc" && sleep 2s
    echo "## CUSTOM PACMAN.CONF ##" > /etc/pacman.conf
    echo "[options]" >> /etc/pacman.conf
    echo "HoldPkg     = pacman glibc" >> /etc/pacman.conf
    echo "Architecture = auto" >> /etc/pacman.conf
    echo "ILoveCandy" >> /etc/pacman.conf
    echo "CheckSpace" >> /etc/pacman.conf
    echo "SigLevel    = Required DatabaseOptional" >> /etc/pacman.conf
    echo "LocalFileSigLevel = Optional" >> /etc/pacman.conf
    echo "[archlinuxfr]" >> /etc/pacman.conf
    echo "SigLevel = Never" >> /etc/pacman.conf
    echo "Server = http://repo.archlinux.fr/\$arch" >> /etc/pacman.conf
    echo "[core]" >> /etc/pacman.conf
    echo "Include = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
    echo "[extra]">> /etc/pacman.conf
    echo "Include = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
    echo "[community]" >> /etc/pacman.conf
    echo "Include = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
    if [[ $cpu == "multicore" ]]; then
        echo "[multilib]" >> /etc/pacman.conf
        echo "Include = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
    fi
    echo -e "$cyan==> Setting mirrorlist... $nc" && sleep 2s
    reflector -c FR --sort rate --save /etc/pacman.d/mirrorlist
    echo -e "$cyan==> Installing yaourt... $nc" && sleep 2s
    pacman --noconfirm -Syu yaourt customizepkg
}

_install_packages() {
    _install="sudo -u $USER_name yaourt --noconfirm -S"

    # GPU Driver
    echo -e "$cyan==> Installing VGA Driver... $nc" && sleep 2s
    $_install $GPU_driver arandr

    # Desktop Environment
    echo -e "$cyan==> Installing Desktop Environment... $nc" && sleep 2s
    $_install ntp htop hardinfo xfce4 xfce4-goodies lxdm lxdm-themes \
    xorg-server xorg-xinit xorg-server-utils grub2-theme-archlinux

    # File System
    echo -e "$cyan==> Installing File System... $nc" && sleep 2s
    $_install gamin gvfs gvfs-mtp gvfs-nfs gvfs-afc gparted ntfs-3g \
    dosfstools exfat-utils file-roller ifuse usbmuxd fuseiso gcdemu rar

    # Fonts
    echo -e "$cyan==> Installing Fonts... $nc" && sleep 2s
    $_install artwiz-fonts font-bh-ttf font-bitstream-speedo \
    ttf-bitstream-vera ttf-liberation ttf-freefont ttf-dejavu \
    gsfonts sdl_ttf ttf-cheapskate ttf-arphic-uming ttf-baekmuk \
    ttf-inconsolata ttf-ms-fonts xorg-fonts-type1

     # Multimedia
    echo -e "$cyan==> Installing Multimedia... $nc" && sleep 2s
    $_install pulseaudio pulseaudio-alsa gstreamer0.10-good pavucontrol \
    gecko-mediaplayer vlc guvcview gtk-recordmydesktop gtkpod mediainfo

    # Printer - Scanner
    echo -e "$cyan==> Installing Printer & Scanner... $nc" && sleep 2s
    $_install cups cups-pdf ghostscript gutenprint sane simple-scan

    # Desktop Tools
    echo -e "$cyan==> Installing Desktop Tools... $nc" && sleep 2s
    $_install vim galculator ffmpegthumbnailer xscreensaver fbreader \
    epdfview masterpdfeditor pinta gimp libreoffice libreoffice-fr

    # Network
    echo -e "$cyan==> Installing Network... $nc" && sleep 2s
    $_install network-manager-applet networkmanager-openvpn wireless_tools

    # Bluetooth
    _bluetooth="off" && lspci | grep "Bluetooth"
    if [[ $? -eq 0 ]]; then
        echo -e "$cyan==> Installing Bluetooth... $nc" && sleep 2s
        $_install bluez bluez-utils gnome-bluetooth
        _bluetooth="on"
    fi

    # Web Navigator & plugins
    echo -e "$cyan==> Installing Web Navigators... $nc" && sleep 2s
    $_install firefox firefox-i18n-fr flashplayer jre8-openjdk icedtea-web
    if [[ $cpu == "multicore" ]]; then
        $_install chromium chromium-pepper-flash
    fi
    ram=`grep MemTotal /proc/meminfo | awk '{print $2}'`
    if [[ ${ram} < 1572864 ]]; then
        sudo -u $USER_name yaourt --tmp /home/$USER_name \
        --noconfirm -S jdk
    else
        $_install jdk
    fi
    archlinux-java set java-8-jdk

    # Network Tools
    echo -e "$cyan==> Installing Network Tools... $nc" && sleep 2s
    $_install skype transmission-gtk google-earth filezilla \
    teamviewer10 hexchat sshfs
    if [[ $cpu == "multicore" ]]; then
        $_install lib32-libjpeg-turbo lib32-libpng
    fi

    # Games
    echo -e "$cyan==> Installing some games... $nc" && sleep 2s
    $_install playonlinux winetricks zenity gnome-chess gnuchess
        if [[ $cpu == "multicore" ]]; then
        $_install lib32-openal lib32-mpg123 lib32-wayland \
        lib32-pango lib32-glu lib32-libxinerama lib32-libwrap lib32-ncurses
    fi

    # VirtuaBox
    until [[ ${virtual,,} == "y" || ${virtual,,} == "n" ]]; do
    _prompt "Do you wish install VirtualBox? $red[Y/n]$green"
    read virtual
    done
    if [[ ${virtual,,} == "y" ]]; then
        echo -e "$cyan==> Installing VirtuaBox... $nc" && sleep 2s
        $_install virtualbox virtualbox-guest-iso \
        virtualbox-host-modules-arch virtualbox-ext-oracle
        echo "vboxdrv" > /etc/modules-load.d/virtualbox.conf
    fi
}

_xfce_settings() {

    # Keyboard Layout
    echo -e "$cyan==> Setting keyboard Layout... $nc" && sleep 2s
    echo 'Section "InputClass"' > \
    /etc/X11/xorg.conf.d/10-keyboard-layout.conf
    echo '    Identifier         "Keyboard Layout"' >> \
    /etc/X11/xorg.conf.d/10-keyboard-layout.conf
    echo '    MatchIsKeyboard    "yes"' >> \
    /etc/X11/xorg.conf.d/10-keyboard-layout.conf
    echo '    Option             "XkbLayout"  "fr"' >> \
    /etc/X11/xorg.conf.d/10-keyboard-layout.conf
    echo '    Option             "XkbVariant" "latin9"' >> \
    /etc/X11/xorg.conf.d/10-keyboard-layout.conf
    echo 'EndSection' >> /etc/X11/xorg.conf.d/10-keyboard-layout.conf

    # LXDM
    echo -e "$cyan==> Setting LXDM Loader... $nc" && sleep 2s
    echo "## CUSTOM LXDM LOADER ##" > /etc/lxdm/lxdm.conf
    echo "[base]" >> /etc/lxdm/lxdm.conf
    echo "# autologin=dgod" >> /etc/lxdm/lxdm.conf
    echo "# timeout=10" >> /etc/lxdm/lxdm.conf
    echo "session=/usr/bin/startxfce4" >> /etc/lxdm/lxdm.conf
    echo "numlock=1" >> /etc/lxdm/lxdm.conf
    echo "# xauth_path=/tmp" >> /etc/lxdm/lxdm.conf
    echo "# skip_password=1" >> /etc/lxdm/lxdm.conf
    echo "greeter=/usr/lib/lxdm/lxdm-greeter-gtk" >> /etc/lxdm/lxdm.conf
    echo "[server]" >> /etc/lxdm/lxdm.conf
    echo "arg=/usr/bin/X -background vt1" >> /etc/lxdm/lxdm.conf
    echo "# tcp_listen=1" >> /etc/lxdm/lxdm.conf
    echo "# reset=1" >> /etc/lxdm/lxdm.conf
    echo "[display]" >> /etc/lxdm/lxdm.conf
    echo "gtk_theme=Clearlooks" >> /etc/lxdm/lxdm.conf
    echo "# bg=/usr/share/backgrounds/default.png" >> /etc/lxdm/lxdm.conf
    echo "bottom_pane=1" >> /etc/lxdm/lxdm.conf
    echo "lang=1" >> /etc/lxdm/lxdm.conf
    echo "keyboard=1" >> /etc/lxdm/lxdm.conf
    echo "theme=Arch-Dark" >> /etc/lxdm/lxdm.conf
    echo "[userlist]" >> /etc/lxdm/lxdm.conf
    echo "disable=0" >> /etc/lxdm/lxdm.conf
    echo "white=$USER_name" >> /etc/lxdm/lxdm.conf
    echo "black=root" >> /etc/lxdm/lxdm.conf
    rm /usr/share/lxdm/themes/Arch-Dark/login.png
    mv login.png /usr/share/lxdm/themes/Arch-Dark/

    # GRUB Theme
    echo -e "$cyan==> Setting GRUB2 Theme... $nc" && sleep 2s
    sed -i -e 's/GRUB_GFXMODE=auto/GRUB_GFXMODE=1024x768/g' /etc/default/grub
    echo 'GRUB_THEME="/boot/grub/themes/Archlinux/theme.txt"' >> \
    /etc/default/grub
    echo 'desktop-image: "background.png"' >> \
    /boot/grub/themes/Archlinux/theme.txt
    grub-mkconfig -o /boot/grub/grub.cfg
    sed -i -e "s/menuentry 'Arch Linux'/menuentry '$sys_name'/g" \
    /boot/grub/grub.cfg
    sed -i -e \
    "s/'Options avancées pour Arch Linux'/'Arch Linux Settings' --class x/g" \
    /boot/grub/grub.cfg
    mv background.png /boot/grub/themes/Archlinux/
    mv x.png /boot/grub/themes/Archlinux/icons/

    # Services
    echo -e "$cyan==> Enabling Services... $nc" && sleep 2s
    systemctl enable lxdm.service
    systemctl enable ntpd.service
    systemctl enable org.cups.cupsd.service
    systemctl enable teamviewerd.service
    if [[ $_bluetooth == "on" ]]; then systemctl enable bluetooth.service; fi

    # Groups
    echo -e "$cyan==> Adding ${USER_name} to all groups... $nc" && sleep 2s
    usermod -aG root,bin,daemon,sys,adm,tty,disk,lp,mem,kmem,wheel $USER_name
    usermod -aG ftp,mail,uucp,log,utmp,locate,rfkill,smmsp,proc $USER_name
    usermod -aG http,games,lock,uuidd,dbus,network,video,audio $USER_name
    usermod -aG optical,floppy,storage,scanner,input,power,nobody $USER_name
    usermod -aG users,systemd-journal,systemd-journal-gateway $USER_name
    usermod -aG systemd-timesync,systemd-network,systemd-bus-proxy $USER_name
    usermod -aG systemd-resolve,systemd-journal-upload $USER_name
    usermod -aG systemd-journal-remote,polkitd,avahi,colord $USER_name
    usermod -aG rtkit,ntp,git,lxdm,cdemu,usbmux,nm-openvpn $USER_name
    if [[ ${virtual,,} == "y" ]]; then
        usermod -aG vboxusers,vboxsf $USER_name
    fi

    # Purge & Update
    echo -e "$cyan==> Purge installation... $nc" && sleep 2s
    echo 'o' | sudo -u $USER_name yaourt -Qdt
    sudo -u $USER_name yaourt --noconfirm -Sc
    echo -e "$cyan==> Update all packages... $nc" && sleep 2s
    sudo -u $USER_name yaourt --noconfirm -Syua

    # Restore User Security
    echo -e "$cyan==> Restore User Security... $nc" && sleep 2s
    sed -i -e \
    "s/${USER_name} ALL=(ALL) NOPASSWD:ALL/${USER_name} ALL=(ALL) ALL/g" \
    /etc/sudoers
}

##################
## XFCE iNSTALL ##
##################
_banner && _settings && _logs && _cpu_detect && \
_gpu_driver && _get_required_content
echo && _warning "System ready! Do you wish to install XFCE?"
(_install_yaourt && _install_packages && _xfce_settings) 2>&1 \
| tee -a $logfile
echo && echo "NOTE: Installation finished. No error reported."
echo "NOTE: View full logfile: /var/log/archboot/"
_warning "Done! $__appname__ $__version__ by $__author__ - $__license__"
reboot
