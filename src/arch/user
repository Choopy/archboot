#!/bin/bash

_user_infos() {

    # User Language
    until grep -Fxq "${USER_lang}" ./languages
    do
        _note "list of available languages codes is available on github"
        _prompt "Enter Language code:" "(ex: fr_FR, en_US, de_DE)"
        read -r USER_lang
    done
    echo
    keymap_code=$(echo ${USER_lang} | cut -d'_' -f 1)

    # Region/City
    until grep -Fxq "${region_city}" ./region_city
    do
        _note "list of available regions codes is available on github"
        _prompt "Enter Region code:" "(ex: Europe/Paris, Asia/Tokyo)"
        read -r region_city
    done
    echo

    # Hostname
    until [[ ${#HOST_name} -ge 3 \
    && ${HOST_name} =~ ^[a-zA-Z0-9][-a-zA-Z0-9_]+$ ]]
    do
        _prompt "Enter Hostname:" "(ex: my-favorite-computer)"
        read -r HOST_name
    done

    # Root Password
    until [[ ${#a} -ge 8 && "${a}" == *[a-z]* && "${a}" == *[0-9]* ]]
    do
        _note "password should be at least 8 chars long with 1 letter and 1 digit"
        _prompt "Enter password for root:"
        read -rs a
    done
    echo

    # Confirm Root Password
    _prompt "Confirm password for root:"
    read -rs ROOT_passwd
    if [[ ${ROOT_passwd} != "${a}" ]]
    then
        _error "passwords does not match!"
    fi
    echo

    # Username
    until [[ ${#USER_name} -ge 3 \
    && ${USER_name} =~ ^[a-zA-Z0-9][-a-zA-Z0-9_]+$ ]]
    do
        _prompt "Enter Username:" "(ex: johnny)"
        read -r USER_name
    done

    # User Password
    until [[ ${#b} -ge 8 && "${b}" == *[a-z]* && "${b}" == *[0-9]* ]]
    do
        _note "password should be at least 8 chars long with 1 letter and 1 digit"
        _prompt "Enter password for ${USER_name}:"
        read -rs b
    done
    echo

    # Confirm User Password
    _prompt "Confirm password for ${USER_name}:"
    read -rs USER_passwd
    if [[ ${USER_passwd} != "${b}" ]]
    then
        _error "passwords does not match!"
    fi
    echo

    # Desktop Environment
    _confirm "Do you wish to install Desktop Environment?"
    if [[ ${confirm} == "y" ]]
    then
        until [[ ${c} == "1" || ${c} == "2" || ${c} == "3" || ${c} == "4" || ${c} == "5" ]]
        do
            _prompt "Kde" "[1]" "- Gnome" "[2]" "- Xfce" "[3]" "- Lxde" "[4]" "- Deepin" "[5]"
            read -r c
        done
        choice=(none kde gnome xfce lxde)
        export desktop=${choice[${c}]}
    fi
    unset confirm

    # Export required vars
    export USER_lang; export keymap_code; export region_city
    export HOST_name; export ROOT_passwd; export USER_name; export USER_passwd
}
