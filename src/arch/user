#!/bin/bash

#                         GET USER VARIABLES
# ============================================================================
# Here we ask all required variables to the user and stored them.
#
# Required variables:
#
#      Language.......: list of languages codes is available in the wiki
#      Hostname.......: computer name such as <my-favorite-computer>
#      Root passwd....: should be at least 6 chars long with 1 letter & 1 digit
#      Username.......: such as <bobby_is_not_a_loser>
#      User passwd....: should be at least 6 chars long with 1 letter & 1 digit
#      User rights....: added to all groups and ALL power in sudoers
#      Linux kernel...: default - hardened - lts - zen
#      Desktop Env....: Gnome - KDE - Deepin - Xfce - LXDE - Cinnamon
#                       Budgie - Enlightenment - MATE - LXQt
#      Display Man....: Gdm - LightDM - Sddm - Lxdm - Xdm
# ============================================================================

_ask_user_information() {

    # Language
    until grep -Fxq "${language}" ./language; do
        _note "list of languages codes is available in the wiki"
        _prompt "Enter language code:" "(e.g., fr_FR, en_US, de_DE)"
        read -r language
    done
    export keymap_code=$(echo ${language} | cut -d'_' -f 1)

    # Hostname
    until [[ ${#HOST_name} -ge 3 \
    && ${HOST_name} =~ ^[a-zA-Z0-9][-a-zA-Z0-9_]+$ ]]; do
        _prompt "Enter hostname:" "(e.g., my-favorite-computer)"
        read -r HOST_name
    done

    # Root Password
    until [[ ${#a} -ge 6 && "${a}" == *[a-z]* && "${a}" == *[0-9]* ]]; do
        _note \
"should be at least 6 chars long with 1 letter & 1 digit"
        _prompt "Enter root password:"
        read -rs a
    done
    echo

    # Confirm Root Password
    _prompt "Confirm root password:"
    read -rs ROOT_passwd
    if [[ ${ROOT_passwd} != "${a}" ]]; then
        _error "passwords does not match!"
    fi
    echo

    # Username
    until [[ ${#USER_name} -ge 3 \
    && ${USER_name} =~ ^[a-zA-Z0-9][-a-zA-Z0-9_]+$ ]]; do
        _prompt "Enter username:" "(e.g., johnny)"
        read -r USER_name
    done

    # User Password
    until [[ ${#b} -ge 6 && "${b}" == *[a-z]* && "${b}" == *[0-9]* ]]; do
        _note \
"should be at least 6 chars long with 1 letter & 1 digit"
        _prompt "Enter password for user ${USER_name}:"
        read -rs b
    done
    echo

    # Confirm User Password
    _prompt "Confirm password for user ${USER_name}:"
    read -rs USER_passwd
    if [[ ${USER_passwd} != "${b}" ]]; then
        _error "passwords does not match!"
    fi
    echo

    # User Rights
    _confirm "Give all rights to user ${USER_name}?"
    case ${confirm} in y|Y) export power="yes";; esac
    unset confirm

    # Linux Kernel
    _confirm "Do you wish to install custom Linux Kernel?"
    case ${confirm} in
        y|Y)
            until [[ ${kern} =~ ^([1-9]|4)$ ]]; do
                _select "Default" "Hardened" "LTS" "ZEN"
                read -r kern
            done
            kernel_choice=\
(none default_kernel hardened_kernel lts_kernel zen_kernel)
            export kernel=${kernel_choice[${kern}]}
            ;;
        *)
            export kernel="default_kernel"
            ;;
    esac
    unset confirm

    # Desktop Environment
    _confirm "Do you wish to install Desktop Environment?"
    case ${confirm} in y|Y)
        until [[ ${desk} =~ ^([1-9]|10)$ ]]; do
            _select "Gnome" "KDE" "MATE" "Xfce" \
"LXDE" "LXQt" "Deepin" "Budgie" "Cinnamon" "Enlightenment"
            read -r desk
        done
        desktop_choice=\
(none gnome kde mate xfce4 lxde lxqt deepin budgie cinnamon enlightenment)
        export desktop=${desktop_choice[${desk}]}
        ;;
    esac
    unset confirm

    # Display Manager
    if [[ ! -z ${desktop+x} ]]; then

        _confirm "Use default Display Manager?"
        case ${confirm} in

            # Custom display manager
            n|N)
                until [[ ${disp} =~ ^([1-5])$ ]]; do
                    _select "Gdm" "LightDM" "Sddm" "Lxdm" "Xdm"
                    read -r disp
                done
                display_choice=(none gdm lightdm sddm lxdm xdm)
                export display_man=${display_choice[${disp}]}
                ;;

            # Default display manager
            *)
                case ${desktop} in
                    gnome|budgie|cinnamon|mate) export display_man="gdm";;
                    kde) export display_man="sddm";;
                    deepin|enlightenment) export display_man="lightdm";;
                    xfce4|lxde|lxqt) export display_man="lxdm";;
                esac
                ;;
        esac
        unset confirm
    fi

    # Export required variables
    export language
    export HOST_name; export ROOT_passwd
    export USER_name; export USER_passwd
}

# archboot by grm34 under Apache v2.0 License.
# ============================================================================
