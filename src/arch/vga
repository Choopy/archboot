#!/bin/bash

#                         3D VGA CONTROLLER(s)
# ============================================================================
# Here we scan for 3D VGA Controller(s) to install appropriate drivers
# with OpenGL and Hardware Acceleration support.
# In case of dual controller system (intel+nvidia) Bumblebee is available.
# User can choose to install proprietary drivers instead of open source.
# All steps are described in the official documentation:
# https://wiki.archlinux.org/index.php/Xorg#Driver_installation
# ============================================================================

_scan_vga_controller() {

    _info "Scanning 3D VGA Controller"
    vga_number=$(lspci | grep -e VGA -e 3D | wc -l)

    # Scan for intel+nvidia controller
    lspci | grep -e VGA -e 3D | grep -ie nvidia | grep -i intel

    # If true ask for Bumblebee
    if [[ $? -eq 0 && ${vga_number} -ge "2" ]]; then

        _note "Nvidia + Intel Controller detected!"
        _confirm "Do you wish to install and activate Bumblebee?"
        case ${confirm} in
            y|Y)
                unset confirm
                _confirm "Use Nvidia proprietary drivers?"
                case ${confirm} in
                    y|Y)
                        export vga_driver="bumblebee_nvidia"
                        export openGL="openGL_nvidia"
                        export hard_video="hard_video_nvidia"
                        ;;
                    *)
                        export vga_driver="bumblebee_nouveau"
                        export openGL="openGL_nouveau"
                        export hard_video="hard_video_nouveau"
                        ;;
                esac
                ;;
        esac
        unset confirm

    # Otherwise detect appropriate drivers
    else

        # NVIDIA
        nvidia_card=$(lspci | grep -e VGA -e 3D | grep -ie nvidia)
        if [[ $? -eq 0 ]]; then
            _note "${nvidia_card##*: } detected!"
            _confirm "Use Nvidia proprietary drivers?"
            case ${confirm} in
                y|Y)
                    export vga_driver="nvidia"
                    export openGL="openGL_nvidia"
                    export hard_video="hard_video_nvidia"
                    ;;
                *)
                    export vga_driver="nouveau"
                    export openGL="openGL_nouveau"
                    export hard_video="hard_video_nouveau"
                    ;;
            esac
            unset confirm
        else

            # AMD / ATI
            amd_card=$(lspci | grep -e VGA -e 3D | grep -e ATI -e AMD)
            if [[ $? -eq 0 ]]; then
                _note "${amd_card##*: } detected!"
                export vga_driver="amd"
                export openGL="openGL_amd"
                export hard_video="hard_video_amd"

            else

                # INTEL
                intel_card=$(lspci | grep -e VGA -e 3D | grep -i intel)
                if [[ $? -eq 0 ]]; then
                    _note "${intel_card##*: } detected!"
                    export vga_driver="intel"
                    export openGL="openGL_intel"
                    export hard_video="hard_video_intel"

                # DEFAULT
                else
                    _note "Controller not found, default driver will be used"
                    export vga_driver="default"
                fi
            fi
        fi
    fi
}

_install_vga_controller() {

    # VGA Controller
    _info "Installing 3D VGA Driver"
    install_vga="_${vga_driver}"
    _chroot "pacman --noconfirm -S ${!install_vga}"
    if [[ ${vga_driver} =~ [^bumblebee_]* ]]; then
        _info "Enabling Bumblebee service"
        _chroot "systemctl enable bumblebeed"
    fi

    # OpenGL & Hardware Video Acceleration
    if [[ ${vga_driver} != "default" ]]; then
        _info "Installing OpenGL & Hardware Video Acceleration"
        install_openGL="_${openGL}"
        install_hard="_${hard_video}"
        _chroot "pacman --noconfirm -S ${!install_openGL} ${!install_hard}"
    fi
}

# archboot by grm34 under Apache v2.0 License.
# ============================================================================
